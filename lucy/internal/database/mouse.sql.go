// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: mouse.sql

package database

import (
	"context"
)

const getMouseStats = `-- name: GetMouseStats :one
select mouseDistance, leftClick, rightClick from mouse where id = 1
`

type GetMouseStatsRow struct {
	Mousedistance int64
	Leftclick     int64
	Rightclick    int64
}

func (q *Queries) GetMouseStats(ctx context.Context) (GetMouseStatsRow, error) {
	row := q.db.QueryRowContext(ctx, getMouseStats)
	var i GetMouseStatsRow
	err := row.Scan(&i.Mousedistance, &i.Leftclick, &i.Rightclick)
	return i, err
}

const updateMouseStats = `-- name: UpdateMouseStats :one
update mouse set mouseDistance = ?, leftClick = ?, rightClick = ? where id = 1 returning id, mousedistance, leftclick, rightclick
`

type UpdateMouseStatsParams struct {
	Mousedistance int64
	Leftclick     int64
	Rightclick    int64
}

func (q *Queries) UpdateMouseStats(ctx context.Context, arg UpdateMouseStatsParams) (Mouse, error) {
	row := q.db.QueryRowContext(ctx, updateMouseStats, arg.Mousedistance, arg.Leftclick, arg.Rightclick)
	var i Mouse
	err := row.Scan(
		&i.ID,
		&i.Mousedistance,
		&i.Leftclick,
		&i.Rightclick,
	)
	return i, err
}
